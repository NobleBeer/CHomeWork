// L1_22.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <conio.h>    // библиотека ввода-вывода
#include <locale.h>   // библиотека языковой локализации

#pragma warning(disable: 4996)
/*
Главная функция. Реализует интерфейс с пользователем.
*/
void main()
{
    unsigned char ch;                          // код символа
    unsigned int  total, prop, prob, arifm, str, other;  // счётчики символов

    // Для сообщений на русском языке
    setlocale(LC_ALL, "rus_rus.866");
    cprintf("Лаба: Подсчёт символов");

    // Обнуление счётчиков
    total = prop = prob = str = arifm = other = 0;

    // Цикл ввода символов, пока НЕ[Esc]
    cprintf("Вводите символы [Esc-выход]");
    while ((ch = getch()) != 27)
    {
        // Вывод символа на экран в разных форматах
        cprintf("\n'%c'\t(%d)\t(0%o)\t(0x%x)", ch, ch, ch, ch);
        // Подсчёт всех символов
        total++;
        // Проверка символа на прописные латинские и кириллические
        if (ch >= 65 && ch <= 90 || ch >= 128 && ch <= 159) prop++;
        // Проверка символа на пробел
        else if (ch == 32 || ch == 0 || ch == 8 || ch == 13 || ch == 255) prob++;
        // Проверка символов на строчные кириллические и латинские
        else if (ch >= 160 && ch <= 175 || ch >= 224 && ch <= 239 || ch >= 97 && ch <= 122) str++;
        // Проверка символов на арифметику
        else if (ch >= 60 && ch <= 62 || ch >= 42 && ch <= 43) arifm++;
        else if (ch == 94 || ch == 47 || ch == 45)  arifm++;
        // Иначе, прочий символ
        else other++;
    }
    // Отображение итогов
    cprintf("\nРезультат: Всего=%d, Прописные=%d, Пробелы=%d, Строчные=%d, Арифметика=%d, Прочие=%d",
        total, prop, prob, str, arifm, other);
    getch();
}





// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
