// Lab_6.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <conio.h> // библиотека ввода-вывода
#include <locale.h> // библиотека языковой локализации
#include <limits.h> // описание ограничений на целые типы данных

/*
Функция проверки свойства числа
*/

bool isProperty(int n /* число */)
{
	if ((n == 2) || (n == 0) || (n == 3))  return true;
	if (n < 0) n = -n;

	int a = 3;
	int b = 0;
	int c = 2;
	for (int i = 3; i <= n; i = a + b)
	{
		a = b;
		b = c;
		c = i;
		if (i == n)
		{		
			return true;
		}		
	}
	return false;
}


#pragma warning(disable: 4996)

/*
Главная функция. Реализует ввод, проверку, подсчет, интерфейс с пользователем.
*/

void main()
{
	// Переменная для результата проверки
	bool check;
	// Объявление переменных для числа, счётчиков, сумматоров, и итоговых значений
	int number, numAll, sumAll, numYes, sumYes, numNot, sumNot, min, max, avg;
	// Для сообщений на русском языке
	setlocale(LC_ALL, "Russian");
	cprintf("Лаба: Свойство числа");
	do {
		// Инициализация счетчиков и сумматоров
		numAll = numYes = numNot = 0;
		sumAll = sumYes = sumNot = 0;
		min = INT_MAX;
		max = INT_MIN;
		// Ввод последовательности
		cprintf("\nСтарт последовательности");
		do {
			// Ввод числа
			cprintf("\nВведите число:>");
			cscanf("%d", &number);
			// Проверка корректности ввода
			if (getch() != 13 || number < SHRT_MIN || number > SHRT_MAX)
			{
				cprintf(" - некорректное значение, нажмите [enter] для продолжения");
				continue;
			}
			if (number == 0) break;
			// Вызов функции проверки свойства числа и отображение её результата
			check = isProperty(number);
			cprintf("\n(%d) %s ", number, ((check) ? "обладает [ДА]" : "не обладает [НЕТ]"));
			// Подсчёт количеств и сумм в зависимости от свойства числа
			if (check)

			{
				numYes++;
				sumYes += number;
			}
			else
			{
				numNot++;
				sumNot += number;
			}
			// Подсчёт общего количества и суммы по модулю всех чисел
			numAll++;
			sumAll += ((number < 0) ? -number : number);
			// Определение максимального и минимального из чисел
			if (number < min) min = number;
			if (number > max) max = number;
		}
		while (1);
		// Отображение итогов
		avg = ((numAll > 0) ? sumAll / numAll : 0);
		cprintf("\nЧисел: Всех = %d, Да = %d, Нет = %d", numAll, numYes, numNot);
		cprintf("\nСуммы: Всех = %d, Да = %d, Нет = %d", sumAll, sumYes, sumNot);
		cprintf("\nИтого: Min = %d, Max = %d, Avg = %d", min, max, avg);
		// Подтверждение новой последовательности
		cprintf("\nНажмите [enter] для старта новой последовательности");
	}
	while (getch() == 13);
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
